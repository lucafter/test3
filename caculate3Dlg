// caculate3Dlg.cpp : implementation file
//

#include "stdafx.h"
#include "caculate3.h"
#include "caculate3Dlg.h"

#include<math.h>

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CAboutDlg dialog used for App About

class CAboutDlg : public CDialog
{
public:
	CAboutDlg();

// Dialog Data
	//{{AFX_DATA(CAboutDlg)
	enum { IDD = IDD_ABOUTBOX };
	//}}AFX_DATA

	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CAboutDlg)
	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	//}}AFX_VIRTUAL

// Implementation
protected:
	//{{AFX_MSG(CAboutDlg)
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
	//{{AFX_DATA_INIT(CAboutDlg)
	//}}AFX_DATA_INIT
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CAboutDlg)
	//}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
	//{{AFX_MSG_MAP(CAboutDlg)
		// No message handlers
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CCaculate3Dlg dialog

CCaculate3Dlg::CCaculate3Dlg(CWnd* pParent /*=NULL*/)
	: CDialog(CCaculate3Dlg::IDD, pParent),num(40),flag(20)
{
	//{{AFX_DATA_INIT(CCaculate3Dlg)
	m_str = _T("");

    str = _T("");

	//}}AFX_DATA_INIT
	// Note that LoadIcon does not require a subsequent DestroyIcon in Win32
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CCaculate3Dlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CCaculate3Dlg)
	DDX_Text(pDX, IDC_EDIT1, m_str);
	//}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CCaculate3Dlg, CDialog)
	//{{AFX_MSG_MAP(CCaculate3Dlg)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON1, OnButton1)
	ON_BN_CLICKED(IDC_BUTTON2, OnButton2)
	ON_BN_CLICKED(IDC_BUTTON3, OnButton3)
	ON_BN_CLICKED(IDC_BUTTON4, OnButton4)
	ON_BN_CLICKED(IDC_BUTTON5, OnButton5)
	ON_BN_CLICKED(IDC_BUTTON6, OnButton6)
	ON_BN_CLICKED(IDC_BUTTON7, OnButton7)
	ON_BN_CLICKED(IDC_BUTTON8, OnButton8)
	ON_BN_CLICKED(IDC_BUTTON9, OnButton9)
	ON_BN_CLICKED(IDC_BUTTON0, OnButton0)
	ON_BN_CLICKED(IDC_Downdot, OnDowndot)
	ON_BN_CLICKED(IDC_JIA, OnJia)
	ON_BN_CLICKED(IDC_JIAN, OnJian)
	ON_BN_CLICKED(IDC_CHENG, OnCheng)
	ON_BN_CLICKED(IDC_CHU, OnChu)
	ON_BN_CLICKED(IDC_ln, Onln)
	ON_BN_CLICKED(IDC_lg, Onlg)
	ON_BN_CLICKED(IDC_sin, Onsin)
	ON_BN_CLICKED(IDC_cos, Oncos)
	ON_BN_CLICKED(IDC_pingfang, Onpingfang)
	ON_BN_CLICKED(IDC_kaifang, Onkaifang)
	ON_BN_CLICKED(IDC_Left, OnLeft)
	ON_BN_CLICKED(IDC_Right, OnRight)
	ON_BN_CLICKED(IDC_Delete, OnDelete)
	ON_BN_CLICKED(IDC_Clear, OnClear)
	ON_BN_CLICKED(IDC_dengyu, Ondengyu)
	ON_EN_CHANGE(IDC_EDIT1, OnChangeEdit1)
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CCaculate3Dlg message handlers

BOOL CCaculate3Dlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// Add "About..." menu item to system menu.

	// IDM_ABOUTBOX must be in the system command range.
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		CString strAboutMenu;
		strAboutMenu.LoadString(IDS_ABOUTBOX);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// Set the icon for this dialog.  The framework does this automatically
	//  when the application's main window is not a dialog
	SetIcon(m_hIcon, TRUE);			// Set big icon
	SetIcon(m_hIcon, FALSE);		// Set small icon
	
	// TODO: Add extra initialization here
	
	return TRUE;  // return TRUE  unless you set the focus to a control
}

void CCaculate3Dlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialog::OnSysCommand(nID, lParam);
	}
}

// If you add a minimize button to your dialog, you will need the code below
//  to draw the icon.  For MFC applications using the document/view model,
//  this is automatically done for you by the framework.

void CCaculate3Dlg::OnPaint() 
{
	if (IsIconic())
	{
		CPaintDC dc(this); // device context for painting

		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), 0);

		// Center icon in client rectangle
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// Draw the icon
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialog::OnPaint();
	}
}

// The system calls this to obtain the cursor to display while the user drags
//  the minimized window.
HCURSOR CCaculate3Dlg::OnQueryDragIcon()
{
	return (HCURSOR) m_hIcon;
}

void CCaculate3Dlg::OnButton1() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("1");
	str += _T("1");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton2() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("2");
	str += _T("2");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton3() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("3");
	str += _T("3");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton4() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("4");
	str += _T("4");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton5() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("5");
	str += _T("5");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton6() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("6");
	str += _T("6");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton7() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("7");
	str += _T("7");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton8() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("8");
	str += _T("8");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton9() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("9");
	str += _T("9");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnButton0() 
{
	// TODO: Add your control notification handler code here
	m_str += _T("0");
	str += _T("0");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnDowndot() 
{
	// TODO: Add your control notification handler code here
	m_str += _T(".");
	str += _T(".");
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnJia() 
{
	// TODO: Add your control notification handler code here
	store();
	m_str += _T("+");
	char temp='+';
	compare(temp);
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnJian() 
{
	// TODO: Add your control notification handler code here
	store();
	m_str += _T("-");
	char temp='-';
	compare(temp);
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnCheng() 
{
	// TODO: Add your control notification handler code here
	store();
	m_str += _T("*");
	char temp='*';
	compare(temp);
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnChu() 
{
	// TODO: Add your control notification handler code here
	store();
	m_str += _T("/");
	char temp='/';
	compare(temp);
	UpdateData(FALSE);
}

void CCaculate3Dlg::Onln() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("ln");
	char temp='n';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::Onlg() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("lg");
	char temp='g';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::Onsin() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("sin");
	char temp='s';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::Oncos() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("cos");
	char temp='c';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::Onpingfang() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("^2");
	store();
	char temp='p';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::Onkaifang() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("sqrt");
	char temp='k';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::OnLeft() 
{
	// TODO: Add your control notification handler code here
	m_str+=_T("(");
	char temp='(';
	flag.push(temp);
    UpdateData(FALSE);
}

void CCaculate3Dlg::OnRight() 
{
	// TODO: Add your control notification handler code here
	store();
	m_str+=_T(")");
	
	while(  flag.get(flag.length()-1) !='(')	caculate();
	flag.pop();
    UpdateData(FALSE);
}

void CCaculate3Dlg::OnDelete() 
{
	// TODO: Add your control notification handler code here
	UpdateData(TRUE);
	//移除最右边一个字符  
	if (!m_str.IsEmpty())
	{
		m_str = m_str.Left(m_str.GetLength() - 1);
	}
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnClear() 
{
	// TODO: Add your control notification handler code here
	UpdateData(TRUE);
	m_str=_T("");
	str=_T("");
    num.empty();
	flag.empty();
	UpdateData(FALSE);
}

void CCaculate3Dlg::Ondengyu() 
{
	// TODO: Add your control notification handler code here
	store();
	while(!flag.isEmpty())
	{
	caculate();
	}
	double temp5;
	temp5=num.get(num.length()-1);
    str.Format(_T("%lf"),temp5);
	m_str.Format(_T("%lf"),temp5);
	UpdateData(FALSE);
}

void CCaculate3Dlg::OnChangeEdit1() 
{
	// TODO: If this is a RICHEDIT control, the control will not
	// send this notification unless you override the CDialog::OnInitDialog()
	// function and call CRichEditCtrl().SetEventMask()
	// with the ENM_CHANGE flag ORed into the mask.
	
	// TODO: Add your control notification handler code here
	
}


void CCaculate3Dlg::store()
{ if(str!=_T(""))
{double temp1;
temp1=atof(str);
num.push(temp1);
str=_T("");
}
}

void CCaculate3Dlg::compare(char temp)
{ if(flag.isEmpty()||flag.get(flag.length()-1)=='('){flag.push(temp);return;}
  else
  { if(temp=='+'||temp=='-'){caculate();flag.push(temp);return;}
    else
    { if(flag.get(flag.length()-1)=='+'||flag.get(flag.length()-1)=='-'){flag.push(temp);return;}
	else {caculate();flag.push(temp);return;}
	}
  }
}

void CCaculate3Dlg::caculate()
{double temp6;
char temp=flag.pop();
if(temp=='n'){double temp2=num.pop();temp6=log(temp2);}
else{
	if(temp=='g'){double temp2=num.pop();temp6=log10(temp2);}
    else{
	   if(temp=='s'){double temp2=num.pop();temp6=sin(temp2);}
        else{
			if(temp=='c'){double temp2=num.pop();temp6=cos(temp2);}
			else{
				if(temp=='p'){double temp2=num.pop();temp6=temp2*temp2;}
                else{
					if(temp=='k'){double temp2=num.pop();temp6=sqrt(temp2);}
                    else{
						double temp2=num.pop();
                         double temp3=num.pop();
                          switch(temp)
						  {
					  	   case '+':temp6=temp3+temp2;break;
						   case '-':temp6=temp3-temp2;break;
    					   case '*':temp6=temp3*temp2;break;
    					   case '/':temp6=temp3/temp2;break;
						  }
}}}}}}

 num.push(temp6);


}


